<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Ninja Snacks</title><link>https://the.fringe.ninja/post/</link><description>Recent content in Posts on Ninja Snacks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 02 May 2014 08:00:00 -0700</lastBuildDate><atom:link href="https://the.fringe.ninja/post/index.xml" rel="self" type="application/rss+xml"/><item><title>What Business are You In?</title><link>https://the.fringe.ninja/2014/05/02/what-business-are-you-in/</link><pubDate>Fri, 02 May 2014 08:00:00 -0700</pubDate><guid>https://the.fringe.ninja/2014/05/02/what-business-are-you-in/</guid><description>Apologies in advance if the title is totally unoriginal.
Nathaniel Jones recently posted a blog on his experiences with Azure. Unfortunately he had a pretty bad experience.
I checked, and all of my azure sites were down. I logged into the portal, and discovered that all of my databases, backups, instances, and websites had been terminated and deleted. There was nothing left. In fact, everything had been deleted at midnight, 8 hours prior to the first (and only) notification of the action taken.</description></item><item><title>Trusting Inputs, Via RESTa Via Nanciacum</title><link>https://the.fringe.ninja/2014/04/21/trusting-inputs-via-resta-via-nanciacum/</link><pubDate>Mon, 21 Apr 2014 13:52:37 -0700</pubDate><guid>https://the.fringe.ninja/2014/04/21/trusting-inputs-via-resta-via-nanciacum/</guid><description>All too often, security is treated as an afterthought in our models. I&amp;rsquo;m as guilty of this as anyone. :) Now that HTTP is becoming the most popular protocol inside the enterprise, sending bad data across the wire becomes much easier. A hidden input field is not all that hidden.
Let&amp;rsquo;s take everyone&amp;rsquo;s second favorite fake business problem: Enrolling Students in Classes. Let&amp;rsquo;s take it further and say we want to develop this as a SaaS product.</description></item><item><title>Incomplete Commands</title><link>https://the.fringe.ninja/2014/04/03/incomplete-commands/</link><pubDate>Thu, 03 Apr 2014 15:27:21 -0500</pubDate><guid>https://the.fringe.ninja/2014/04/03/incomplete-commands/</guid><description>Recently a question came up in the CQRS chatroom on Jabbr:Â  Here&amp;rsquo;s the situation. New command comes in, They can sometimes be missing some info (for daft reasons), if it is missing info then I need to call off to an external api to get the info back. This external api is unreliable so it would be better to supply the information upfront if possible.
There are a couple of ways to do this.</description></item><item><title>The Wrong Way to Use Javascript</title><link>https://the.fringe.ninja/2013/12/27/the-wrong-way-to-use-javascript/</link><pubDate>Fri, 27 Dec 2013 11:06:21 -0800</pubDate><guid>https://the.fringe.ninja/2013/12/27/the-wrong-way-to-use-javascript/</guid><description>I&amp;rsquo;ve been taking a bit of a coding vacation. Before I jump back into things, I decided to do a little housekeeping and clean the cobwebs from my interwebs. Specifically, reducing the level of annoying coming out of Facebook.
Look at this nonsense right here:
Wow, what a great user experience! Having to un-check 60-odd check-boxes individually is just great. I&amp;rsquo;m sure the team of 15 out of 1,000 Facebook engineers that built this page thought this was really clever.</description></item><item><title>The Electroweak Vacuum is Eventually Consistent</title><link>https://the.fringe.ninja/2013/12/18/the-electroweak-vacuum-is-eventually-consistent/</link><pubDate>Wed, 18 Dec 2013 07:24:06 +0200</pubDate><guid>https://the.fringe.ninja/2013/12/18/the-electroweak-vacuum-is-eventually-consistent/</guid><description>The fastest information can ever travel is 3*10^8 m/s - in a vacuum. It&amp;rsquo;s 2/3rds that in a copper wire. In the ideal case.
Imagine two observers in the milky way galaxy, one at Terminus and the other at Star&amp;rsquo;s End. They will observe events from all over the universe at different times - they will not agree on the order of events. What they can agree on is that eventually they will see all of them.</description></item><item><title>Value Object Only Domains</title><link>https://the.fringe.ninja/2013/10/09/value-object-only-domains/</link><pubDate>Wed, 09 Oct 2013 23:12:28 -0700</pubDate><guid>https://the.fringe.ninja/2013/10/09/value-object-only-domains/</guid><description>Word on the street is value objects have been getting the short stick in DDD ORMS. That&amp;rsquo;s too bad. Value objects should be first class citizens because like aggregates their role is to enforce invariants. e.g.
DateTime.Parse(&amp;quot;NOPE&amp;quot;) // &amp;lt;-- nope DateTime.TryParse(&amp;quot;NOPE&amp;quot;, out date) // &amp;lt;-- still nope What about something like an address? Is a part of your core domain &amp;lsquo;validate this address?&amp;rsquo; Or can you delegate to a generic domain, and implement with SmartyStreets or Melissa Data?</description></item><item><title>Organizing Per Feature in Nancy</title><link>https://the.fringe.ninja/2013/10/03/organizing-per-feature-in-nancy/</link><pubDate>Thu, 03 Oct 2013 09:00:00 -0700</pubDate><guid>https://the.fringe.ninja/2013/10/03/organizing-per-feature-in-nancy/</guid><description>We&amp;rsquo;ve all built applications that look like this:
There&amp;rsquo;s a bit of a problem here. What does Exception Reporting have to do with Validation? Or the Home Page? Mostly nothing, other than these classes perform the same kind of function.
much, much nicer to have views, view models, validators, command/query handlers all adjacent together
&amp;mdash; Jimmy Bogard (@jbogard) October 2, 2013 Wouldn&amp;rsquo;t it be easier to organize everything by feature instead?</description></item><item><title>Getting RavenDB Profiling Working on Nancy</title><link>https://the.fringe.ninja/2013/08/15/getting-ravendb-profiling-working-on-nancy/</link><pubDate>Thu, 15 Aug 2013 10:51:38 -0700</pubDate><guid>https://the.fringe.ninja/2013/08/15/getting-ravendb-profiling-working-on-nancy/</guid><description>This is my second attempt. :)
About a year ago I made an attempt to wire Nancy together with RavenDB and failed miserably. Needed a break from businessy coding last night so I decided to work on something fun instead.
The ability to see what&amp;rsquo;s going on in your application is so important when it comes to performance tuning. Yes, there&amp;rsquo;s that old adage about premature optimization. IMO this phrase is taken out of context.</description></item><item><title>Trust, but Verify</title><link>https://the.fringe.ninja/2013/08/06/trust-but-verify/</link><pubDate>Tue, 06 Aug 2013 18:15:42 -0700</pubDate><guid>https://the.fringe.ninja/2013/08/06/trust-but-verify/</guid><description>Sage advice. I almost made a huge mistake this sprint, but thankfully caught it because I had one last conversation with the domain expert before I deployed anything.
As we&amp;rsquo;re using eventing / event sourcing this would have been bad as events are immutable. You can always fix bugs later but that is just more code to write which can introduce more bugs and&amp;hellip; you get the picture.
There&amp;rsquo;s a shared concept in the company, called the Packout.</description></item><item><title>Replacing Mocks with Events in Your Tests</title><link>https://the.fringe.ninja/2013/08/04/replacing-mocks-with-events-in-your-tests/</link><pubDate>Sun, 04 Aug 2013 13:20:01 -0700</pubDate><guid>https://the.fringe.ninja/2013/08/04/replacing-mocks-with-events-in-your-tests/</guid><description>Sometimes our model can&amp;rsquo;t be as pure as the driven snow. Sometimes we have to use a really crappy external model because replacing it outright would be too expensive. Typically we deal with this in our tests with some kind of mocking framework.
Example,we have a use case for &amp;lsquo;creating&amp;rsquo; an item in the ERP system. Of course in real life nothing ever gets &amp;lsquo;created.&amp;rsquo; Instead our inventory items are &amp;lsquo;created&amp;rsquo; upstream in the product development context.</description></item><item><title>CQRS - erm OOP and Validations</title><link>https://the.fringe.ninja/2013/07/10/cqrs-erm-oop-and-validations/</link><pubDate>Wed, 10 Jul 2013 21:42:12 -0700</pubDate><guid>https://the.fringe.ninja/2013/07/10/cqrs-erm-oop-and-validations/</guid><description>A discussion came up recently on the DDD/CQRS forums recently, that got sidetracked into &amp;lsquo;where do the validations go&amp;rsquo; (along with a lot of weird nonsense about async command queues, http status code pedantry, etc, but we&amp;rsquo;ll leave that for some other time). A large minority of developers - perhaps even a majority - seem to think that validations belong somewhere in the &amp;lsquo;trusted&amp;rsquo; client.
I find this conclusion strange, as none of the .</description></item><item><title>Sharepoint Enterprise Captain&#39;s Log, Stardate 233284.98</title><link>https://the.fringe.ninja/2013/06/27/sharepoint-enterprise-captains-log-stardate-233284.98/</link><pubDate>Thu, 27 Jun 2013 11:45:51 -0700</pubDate><guid>https://the.fringe.ninja/2013/06/27/sharepoint-enterprise-captains-log-stardate-233284.98/</guid><description/></item><item><title>Unlocking the Key in Navision So We Can Apply CQRS</title><link>https://the.fringe.ninja/2013/06/23/unlocking-the-key-in-navision-so-we-can-apply-cqrs/</link><pubDate>Sun, 23 Jun 2013 14:46:11 -0700</pubDate><guid>https://the.fringe.ninja/2013/06/23/unlocking-the-key-in-navision-so-we-can-apply-cqrs/</guid><description>The Soap Box Part We&amp;rsquo;ve heard this before, but it bears repeating: CQRS is not just for greenfield event-sourced ddd systems. It can apply to crappy brownfield systems too. It may even have more relevance there.
Let&amp;rsquo;s take the penultimate brownfield system, an ERP system. In particular, Navision. Navision has a fantastic interface for interacting with it (snipped for brevity):
public interface SalesPrice_Port { Read_Result Read(Read request); ReadMultiple_Result ReadMultiple(ReadMultiple request); Create_Result Create(Create request); Update_Result Update(Update request); Delete_Result Delete(Delete request); } In other words, a 100% behavior free SQL-like interface that isn&amp;rsquo;t sql because you have Create / Read instead of INSERT / SELECT.</description></item><item><title>C# A Quanta of Bad Design</title><link>https://the.fringe.ninja/2013/06/21/c#-a-quanta-of-bad-design/</link><pubDate>Fri, 21 Jun 2013 09:06:30 -0700</pubDate><guid>https://the.fringe.ninja/2013/06/21/c#-a-quanta-of-bad-design/</guid><description>This bit me in the ass yesterday.
0m.Equals(0.0m) but
0m.ToString().Equals(0.0m.ToString()).Equals(false)</description></item><item><title>Scrum in Under Ten Minutes</title><link>https://the.fringe.ninja/2013/06/14/scrum-in-under-ten-minutes/</link><pubDate>Fri, 14 Jun 2013 09:45:36 -0700</pubDate><guid>https://the.fringe.ninja/2013/06/14/scrum-in-under-ten-minutes/</guid><description>Great video explaining Scrum in under ten minutes! And it&amp;rsquo;s not just for developers either.</description></item><item><title>Automatic Exception Reporting with YouTrack and Nancy pt. 2: Bouncing Off the Green Monster</title><link>https://the.fringe.ninja/2013/06/11/automatic-exception-reporting-with-youtrack-and-nancy-pt.-2-bouncing-off-the-green-monster/</link><pubDate>Tue, 11 Jun 2013 10:00:00 -0700</pubDate><guid>https://the.fringe.ninja/2013/06/11/automatic-exception-reporting-with-youtrack-and-nancy-pt.-2-bouncing-off-the-green-monster/</guid><description>In Part 1 of this series we looked at putting NancyFX as a simple http wrapper in front of YouTrack. Now we&amp;rsquo;re going to make it more RESTful - i.e. we will display the error page to the user agent and include the exception report form on that page.
We will do this by leveraging Nancy&amp;rsquo;s status code handling features. This will allow us to intercept any status code we want and modify the response.</description></item><item><title>Automatic Exception Reporting with YouTrack and Nancy pt. 1: The Skeleton</title><link>https://the.fringe.ninja/2013/06/06/automatic-exception-reporting-with-youtrack-and-nancy-pt.-1-the-skeleton/</link><pubDate>Thu, 06 Jun 2013 11:25:56 +0200</pubDate><guid>https://the.fringe.ninja/2013/06/06/automatic-exception-reporting-with-youtrack-and-nancy-pt.-1-the-skeleton/</guid><description>Getting the business users to try and recreate a bug is difficult to say the least. They may not remember what it is they did to reproduce. But you can bet that if you don&amp;rsquo;t fix it by yesterday you&amp;rsquo;re gonna get an earful. In fact we just did. This is me doing something about it :)
Turns out this is annoyingly easy with Nancy and the YouTrackSharp library, so easy that I&amp;rsquo;m not going to bother test driving this.</description></item><item><title>Displaying the Current Sprint in YouTrack for Your Boss</title><link>https://the.fringe.ninja/2013/06/05/displaying-the-current-sprint-in-youtrack-for-your-boss/</link><pubDate>Wed, 05 Jun 2013 14:56:05 +0200</pubDate><guid>https://the.fringe.ninja/2013/06/05/displaying-the-current-sprint-in-youtrack-for-your-boss/</guid><description>Here where I work we use YouTrack for issue tracking. We have a small team, it&amp;rsquo;s easy to use and free.
We&amp;rsquo;re also trying to get the business side more involved with what we&amp;rsquo;re doing - to know that we&amp;rsquo;re not just talking to ourselves / the keyboard all day. Unfortunately the default search leaves much to be desired.
Really what I want to show is all current features without subtasks (too noisy) AND any &amp;lsquo;orphaned&amp;rsquo; tasks, bugs etc.</description></item><item><title>Empty Project - Nancy vs MVC4</title><link>https://the.fringe.ninja/2013/06/03/empty-project-nancy-vs-mvc4/</link><pubDate>Mon, 03 Jun 2013 00:02:31 +0200</pubDate><guid>https://the.fringe.ninja/2013/06/03/empty-project-nancy-vs-mvc4/</guid><description>I just installed the Nancy Templates for Visual Studio for Visual Studio. Before this, creating a project for Nancy has always been a bit of a pain - adding a mvc project and then removing a whole bunch of crap you don&amp;rsquo;t need. Way too much fiddlery required.
What really got me was the minimalistic set of dependencies: Nine is a good number.
Compare that to an empty MVC4 project:Seventeen is very inauspicious.</description></item><item><title>MVC4 Cache Con-trolling</title><link>https://the.fringe.ninja/2013/05/28/mvc4-cache-con-trolling/</link><pubDate>Tue, 28 May 2013 15:19:37 +0200</pubDate><guid>https://the.fringe.ninja/2013/05/28/mvc4-cache-con-trolling/</guid><description>All I want to do is cache something for one day. MVC4 is seriously trolling me today:
public override void ExecuteResult(ControllerContext context) { context.HttpContext.Response.OutputStream.Write(contents, 0, contents.Length); context.HttpContext.Response.ContentType = contentType; context.HttpContext.Response.Headers.Set(&amp;quot;Cache-Control&amp;quot;, &amp;quot;public, max-age=86400&amp;quot;); context.HttpContext.Response.Headers.Set(&amp;quot;Expires&amp;quot;, DateTime.UtcNow.AddDays(1).ToString(&amp;quot;r&amp;quot;)); } And the response?
Cache-Control:private Content-Length:30262 Content-Type:image Date:Tue, 28 May 2013 22:18:07 GMT Expires:Wed, 29 May 2013 22:18:07 GMT ARRRRRGH. I don&amp;rsquo;t know why people who develop on the microsoft default stack put up with crap like this.</description></item><item><title>Publishing to RaccoonBlog with ScribeFire</title><link>https://the.fringe.ninja/2013/05/24/publishing-to-raccoonblog-with-scribefire/</link><pubDate>Fri, 24 May 2013 12:00:00 +0200</pubDate><guid>https://the.fringe.ninja/2013/05/24/publishing-to-raccoonblog-with-scribefire/</guid><description>I am pretty picky when it comes to my HTML. OK, a lot picky. Needless to say I don&amp;rsquo;t care for WYSIWYG HTML editors. Why are you adding extra paragraph tags everywhere? No, I put that blockquote inside that paragraph for a reason. And so on.
The one that RaccoonBlog comes with is no different. When I go into source mode I expect it to not touch my source. Not cool man!</description></item><item><title>Why is it so Slow?</title><link>https://the.fringe.ninja/2013/05/23/why-is-it-so-slow/</link><pubDate>Thu, 23 May 2013 12:00:00 +0200</pubDate><guid>https://the.fringe.ninja/2013/05/23/why-is-it-so-slow/</guid><description>Recently, a client wanted to know why certain product they had installed was performing so horribly from their overseas office when it worked just fine over here. I had my suspicions but I wanted to confirm it.
So, I had him put in fiddler. If you haven&amp;rsquo;t heard of this tool, get it now. It will save you a ton of time when debugging any http issue.
Anyway, my suspicions were confirmed: This is actually from the IE debugging tools but you get the idea.</description></item><item><title>First Blog Post Evah</title><link>https://the.fringe.ninja/2013/05/11/first-blog-post-evah/</link><pubDate>Sat, 11 May 2013 12:00:00 -0700</pubDate><guid>https://the.fringe.ninja/2013/05/11/first-blog-post-evah/</guid><description>Mainly to make sure this is working. You know?</description></item></channel></rss>