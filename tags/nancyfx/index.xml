<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NancyFx on Ninja Snacks</title><link>https://the.fringe.ninja/tags/nancyfx/</link><description>Recent content in NancyFx on Ninja Snacks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Apr 2014 13:52:37 -0700</lastBuildDate><atom:link href="https://the.fringe.ninja/tags/nancyfx/index.xml" rel="self" type="application/rss+xml"/><item><title>Trusting Inputs, Via RESTa Via Nanciacum</title><link>https://the.fringe.ninja/2014/04/21/trusting-inputs-via-resta-via-nanciacum/</link><pubDate>Mon, 21 Apr 2014 13:52:37 -0700</pubDate><guid>https://the.fringe.ninja/2014/04/21/trusting-inputs-via-resta-via-nanciacum/</guid><description>All too often, security is treated as an afterthought in our models. I&amp;rsquo;m as guilty of this as anyone. :) Now that HTTP is becoming the most popular protocol inside the enterprise, sending bad data across the wire becomes much easier. A hidden input field is not all that hidden.
Let&amp;rsquo;s take everyone&amp;rsquo;s second favorite fake business problem: Enrolling Students in Classes. Let&amp;rsquo;s take it further and say we want to develop this as a SaaS product.</description></item><item><title>Organizing Per Feature in Nancy</title><link>https://the.fringe.ninja/2013/10/03/organizing-per-feature-in-nancy/</link><pubDate>Thu, 03 Oct 2013 09:00:00 -0700</pubDate><guid>https://the.fringe.ninja/2013/10/03/organizing-per-feature-in-nancy/</guid><description>We&amp;rsquo;ve all built applications that look like this:
There&amp;rsquo;s a bit of a problem here. What does Exception Reporting have to do with Validation? Or the Home Page? Mostly nothing, other than these classes perform the same kind of function.
much, much nicer to have views, view models, validators, command/query handlers all adjacent together
&amp;mdash; Jimmy Bogard (@jbogard) October 2, 2013 Wouldn&amp;rsquo;t it be easier to organize everything by feature instead?</description></item><item><title>Getting RavenDB Profiling Working on Nancy</title><link>https://the.fringe.ninja/2013/08/15/getting-ravendb-profiling-working-on-nancy/</link><pubDate>Thu, 15 Aug 2013 10:51:38 -0700</pubDate><guid>https://the.fringe.ninja/2013/08/15/getting-ravendb-profiling-working-on-nancy/</guid><description>This is my second attempt. :)
About a year ago I made an attempt to wire Nancy together with RavenDB and failed miserably. Needed a break from businessy coding last night so I decided to work on something fun instead.
The ability to see what&amp;rsquo;s going on in your application is so important when it comes to performance tuning. Yes, there&amp;rsquo;s that old adage about premature optimization. IMO this phrase is taken out of context.</description></item><item><title>Automatic Exception Reporting with YouTrack and Nancy pt. 2: Bouncing Off the Green Monster</title><link>https://the.fringe.ninja/2013/06/11/automatic-exception-reporting-with-youtrack-and-nancy-pt.-2-bouncing-off-the-green-monster/</link><pubDate>Tue, 11 Jun 2013 10:00:00 -0700</pubDate><guid>https://the.fringe.ninja/2013/06/11/automatic-exception-reporting-with-youtrack-and-nancy-pt.-2-bouncing-off-the-green-monster/</guid><description>In Part 1 of this series we looked at putting NancyFX as a simple http wrapper in front of YouTrack. Now we&amp;rsquo;re going to make it more RESTful - i.e. we will display the error page to the user agent and include the exception report form on that page.
We will do this by leveraging Nancy&amp;rsquo;s status code handling features. This will allow us to intercept any status code we want and modify the response.</description></item><item><title>Automatic Exception Reporting with YouTrack and Nancy pt. 1: The Skeleton</title><link>https://the.fringe.ninja/2013/06/06/automatic-exception-reporting-with-youtrack-and-nancy-pt.-1-the-skeleton/</link><pubDate>Thu, 06 Jun 2013 11:25:56 +0200</pubDate><guid>https://the.fringe.ninja/2013/06/06/automatic-exception-reporting-with-youtrack-and-nancy-pt.-1-the-skeleton/</guid><description>Getting the business users to try and recreate a bug is difficult to say the least. They may not remember what it is they did to reproduce. But you can bet that if you don&amp;rsquo;t fix it by yesterday you&amp;rsquo;re gonna get an earful. In fact we just did. This is me doing something about it :)
Turns out this is annoyingly easy with Nancy and the YouTrackSharp library, so easy that I&amp;rsquo;m not going to bother test driving this.</description></item><item><title>Empty Project - Nancy vs MVC4</title><link>https://the.fringe.ninja/2013/06/03/empty-project-nancy-vs-mvc4/</link><pubDate>Mon, 03 Jun 2013 00:02:31 +0200</pubDate><guid>https://the.fringe.ninja/2013/06/03/empty-project-nancy-vs-mvc4/</guid><description>I just installed the Nancy Templates for Visual Studio for Visual Studio. Before this, creating a project for Nancy has always been a bit of a pain - adding a mvc project and then removing a whole bunch of crap you don&amp;rsquo;t need. Way too much fiddlery required.
What really got me was the minimalistic set of dependencies: Nine is a good number.
Compare that to an empty MVC4 project:Seventeen is very inauspicious.</description></item></channel></rss>